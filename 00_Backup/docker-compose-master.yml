version: "3"
services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    volumes:
      - ./backend:/usr/src/app
      - ./backend/static:/usr/src/app/static
      - ./backend/media:/usr/src/app/media
    working_dir: /usr/src/app
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - postgres
    networks:
      - app-network
    environment:
      - DJANGO_SETTINGS_MODULE=videoflix.settings
    command: ["bash", "/usr/src/app/start_service.sh"]

  web:
    image: nginx:latest
    container_name: web
    depends_on:
      - backend
    volumes:
      - ./nginx-config/default.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/dist/frontend_videoflix/browser:/usr/share/nginx/html
      - ./backend/staticfiles:/usr/src/app/staticfiles
      - ./backend/media:/usr/src/app/media
    ports:
      - "80:80"
    networks:
      - app-network

  redis:
    image: "redis:latest"
    container_name: redis
    command: ["redis-server"]
    ports:
      - "6379:6379"
    networks:
      - app-network

  postgres:
    image: "postgres:17"
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    networks:
      - app-network

  rqworker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rq_worker
    volumes:
      - ./backend:/usr/src/app
    working_dir: /usr/src/app
    command: python manage.py rqworker default
    depends_on:
      - redis
      - postgres
    networks:
      - app-network
    environment:
      - DJANGO_SETTINGS_MODULE=videoflix.settings

  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   container_name: frontend
  #   networks:
  #     - app-network
  #   # command: sh -c "npm install && npm run build"

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
