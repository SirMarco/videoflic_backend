version: "3"

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend
    volumes:
      - ./backend:/usr/src/app
      - ./backend/static:/usr/src/app/static
      - ./backend/staticfiles:/usr/src/app/staticfiles
    working_dir: /usr/src/app
    ports:
      - "8000:8000"
    depends_on:
      - redis
    networks:
      - app-network
    environment:
      - DJANGO_SETTINGS_MODULE=videoflix.settings
    command: bash -c "python manage.py collectstatic --noinput && python manage.py runserver 0.0.0.0:8000"

  redis:
    image: "redis:latest"
    container_name: redis
    command: ["redis-server"]
    ports:
      - "6379:6379"
    networks:
      - app-network

  rqworker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rq_worker
    volumes:
      - ./backend:/usr/src/app
    working_dir: /usr/src/app
    command: python manage.py rqworker default
    depends_on:
      - redis
    networks:
      - app-network
    environment:
      - DJANGO_SETTINGS_MODULE=videoflix.settings

  nginx:
    image: nginx:latest
    container_name: nginx
    depends_on:
      - backend
      - frontend
    volumes:
      - ./nginx-config/default.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/dist/frontend_videoflix/browser:/usr/share/nginx/html # Kopiere das gebaute Angular-Frontend hierhin
      - static:/usr/src/app/static
    ports:
      - "80:80"
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    networks:
      - app-network
    # command: sh -c "npm install && npm run build"

volumes:
  static:

networks:
  app-network:
    driver: bridge
